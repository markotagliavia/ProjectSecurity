using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace SecurityManager
{
    class GennerateRsaKey
    {
        public sealed class SessionKey
        {
            public Guid Id;
            public byte[] SymmetricKey;
            public RSAParameters PublicKey;
            public RSAParameters PrivateKey;
        }


        private Dictionary<Guid, SessionKey> sessionKeys;


        public RSAParameters Generate(Guid sessionId)
        {
            // NOTE: Make the key size configurable.
            using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider(2048))
            {
                SessionKey s = new SessionKey()
                {
                    Id = sessionId,
                    PublicKey = rsa.ExportParameters(false /* no private key info */),
                    PrivateKey = rsa.ExportParameters(true /* with private key info */),
                    SymmetricKey = null, // To be generated by the client.
                };

                sessionKeys.Add(Guid.NewGuid(), s);

                return s.PublicKey;
            }
        }
    }
}
